name: Bump version

concurrency:
  group: BumpVersion
  cancel-in-progress: true

on:
  pull_request:
    branches: [master]
    types: [closed]

jobs:
  install:
    if: ${{ github.event.pull_request.merged }}
    uses: KL-Engineering/github-action-workflows/.github/workflows/npm-ci.yml@v3.2.1
    secrets:
      NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

  lint:
    if: ${{ github.event.pull_request.merged }}
    needs: [install]
    uses: KL-Engineering/github-action-workflows/.github/workflows/npm-lint.yml@v3.2.1

  test:
    if: ${{ github.event.pull_request.merged }}
    needs: [install, lint]
    uses: ./.github/workflows/run-tests.yml

  generate-version:
    if: ${{ github.event.pull_request.merged }}
    needs: [lint]
    uses: KL-Engineering/github-action-workflows/.github/workflows/npm-generate-version.yml@v3.2.1
    secrets:
      NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

  build-and-push:
    if: ${{ github.event.pull_request.merged }}
    needs: [generate-version]
    runs-on: ubuntu-latest
    steps:
      - uses: KL-Engineering/github-action-workflows/.github/actions/npm-ci@v3.2.1
        with:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
      - name: NPM Build
        id: npm-build
        run: |
          npm run build
          npm prune --production
      - name: Build and Push Container
        uses: ./.github/actions/docker-build-and-push
        with:
          environment: ${{ needs.generate-version.outputs.tag }}
          region: global
          ecr_repository: kidsloop-live-backend
          dockerfile_dir: deploy
          dockerfile_name: Dockerfile.bitbucket-pipeline
          dockerfile_context: .
          ecr_aws_region: eu-west-2
          ecr_registry: 942095822719.dkr.ecr.eu-west-2.amazonaws.com
          ECR_AWS_ACCESS_KEY_ID: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          ECR_AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}

  deploy-alpha-dev-test:
    needs: [build-and-push]
    uses: ./.github/workflows/deploy-alpha-dev-call.yml
    with:
      ecs_aws_service: kidsloop-alpha-live-graphql
      desired_ocitag: alpha-latest
    secrets:
      AWS_ACCESS_KEY_ID_ALPHA_DEV: ${{ secrets.AWS_ACCESS_KEY_ID_ALPHA_DEV }}
      AWS_SECRET_ACCESS_KEY_ALPHA_DEV: ${{ secrets.AWS_SECRET_ACCESS_KEY_ALPHA_DEV }}
