pipelines:
  branches:
    master:
    - step: &step-secret-check
        name: Atlassian Security Secrets Scan
        script:
          - pipe: atlassian/git-secrets-scan:0.5.1
    - step: &step-build-npm
        name: 'Build NPM'
        image: node:lts
        script:
          - npm ci
        caches:
          - nodemodules
        artifacts:
          - node_modules/**
    - step: &step-build-docker
        name: "Build & Push Docker image"
        image: python:3.7.4-alpine3.10
        script:
          - pip3 install -U awscli

          - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          - export REPO=$DOCKER_REPO_URL/kidsloop-live-backend  # DOCKER_REPO_URL is workspace wide variable
          - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - printf '"Git tag":"%s", "Git commit":"%s" "ECR repo":"%s"' $BRANCH_TAG $COMMIT_TAG $REPO

          - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
          
          - mv deploy/Dockerfile.bitbucket-pipeline .
          - docker build -t live-backend -f Dockerfile.bitbucket-pipeline .
    
          - docker tag live-backend:latest $REPO:$BRANCH_TAG
          - docker tag live-backend:latest $REPO:$BRANCH_TAG-latest
          - docker tag live-backend:latest $REPO:$BRANCH_TAG-$BITBUCKET_BUILD_NUMBER
          - docker tag live-backend:latest $REPO:$BRANCH_TAG-$COMMIT_TAG

          - docker push $REPO:$BRANCH_TAG
          - docker push $REPO:$BRANCH_TAG-latest
          - docker push $REPO:$BRANCH_TAG-$BITBUCKET_BUILD_NUMBER
          - docker push $REPO:$BRANCH_TAG-$COMMIT_TAG
        services:
          - docker
        caches:
          - docker
    alpha:
    - step: *step-secret-check
    - step: *step-build-npm
    - step: *step-build-docker
    - step: &step-deploy-alpha
        name: Deploy to alpha
        deployment: alpha
        script:
        - pipe: atlassian/aws-ecs-deploy:1.6.0
          variables:
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_ALPHA_OLD
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_ALPHA_OLD
            AWS_DEFAULT_REGION: 'ap-northeast-2' # Optional if already defined in the context.
            CLUSTER_NAME: 'kidsloop-alpha'
            SERVICE_NAME: 'kidsloop-alpha-live-graphql'
            FORCE_NEW_DEPLOYMENT: 'true'

definitions:
  caches:
    nodemodules: ./node_modules
